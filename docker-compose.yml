# cleanup all the containers docker container prune
version: '3'
services:

  # clean: docker-compose run --rm maven mvn clean
  # build: docker-compose run --rm maven mvn clean install
  maven:
    container_name: lifehack-maven
    image: maven:3.3-jdk-8
    working_dir: /home/app/src/
    volumes: 
      - ./LifeHack.Data/:/home/app/src/
      - ./LifeHack.Data/target/:/home/app/target/
    build: 
      context: ./LifeHack.Data/

  # clean: docker-compose run --rm netcore dotnet clean
  # build: docker-compose run --rm netcore dotnet build
  # publish: docker-compose run --rm netcore dotnet publish
  netcore:
    image: mcr.microsoft.com/dotnet/core/sdk:2.2
    working_dir: /src/
    volumes: 
      - ./LifeHack/:/src/
    build: 
      context: ./LifeHack/

  # build: docker-compose run --rm node bash -c "yarn install --no-bin-links && npm run-script dist"
  node:
    image: node:12.2.0
    working_dir: /src/
    volumes: 
      - ./LifeHackUI/:/src/
    build: 
      context: ./LifeHackUI/

  # database container, must be running before all other containers
  db:
    container_name: lifehack-neo4j
    image: neo4j:3.4
    ports:
      - "7474:7474"
      - "7687:7687"
    environment: 
      - NEO4J_HEAP_MEMORY=2048
      - NEO4J_CACHE_MEMORY=1G
      - NEO4JLABS_PLUGINS=[\"apoc\"\]
      - NEO4J_AUTH=neo4j/@abc123
    expose:
      - "7474"
      - "7687"
    volumes:
      - ./LifeHack.Database/data:/var/lib/neo4j/data/
      - ./LifeHack.Database/import:/var/lib/neo4j/import/

  #Data Access Layer Endpoint
  data-api:
    container_name: lifehack-data
    image: tomcat:latest
    ports:
      - "8080:8080"
    volumes:
      - ./LifeHack.Data/target/webapps:/usr/local/tomcat/webapps
    links:
      - db

  #Main C# .Net Core Api for the Application Services
  api:
    container_name: lifehack-api
    working_dir: /api/
    image: mcr.microsoft.com/dotnet/core/sdk:2.2
    command: dotnet ./LifeHack.Api.dll
    restart: always
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8000:80"
    volumes: 
      - ./LifeHack/LifeHack.Api/bin/Debug/netcoreapp2.2/publish:/api/
    links: 
      - db
      - data-api

  web:
    image: nginx:alpine
    container_name: lifehack-web
    ports: 
      - "4200:80"
    volumes: 
      - ./LifeHackUI/dist/LifeHackUI:/usr/share/nginx/html
    links: 
      - db
      - data-api
      - api